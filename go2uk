#!/usr/bin/python3
import sys
import requests
import datetime
import lxml.html as lh
from termcolor import colored
url = 'https://www.gov.uk/guidance/red-amber-and-green-list-rules-for-entering-england'
cmap = {}
colours = ['red', 'amber', 'green']


def populate():
    page = requests.get(url)
    doc = lh.fromstring(page.content)
    for tables in doc.xpath('//table'):
        colour = None
        for table in tables:
            if table.tag == 'thead':
                colour = table.text_content().split()[0].lower()
                cmap[colour] = []
            else:
                countries = [name for name in table.text_content().split('\n')
                             if len(name.strip()) > 1 and not name.strip().startswith('Moved')]
                for c in countries:
                    key = c.strip().split()[0].lower()
                    cmap[key] = colour
                    cmap[colour].append(c.strip())


def show_colour(*colours):
    delimit = '\n* '
    for colour in colours:
        cs = cmap[colour]
        text_colour = "yellow" if colour == "amber" else colour
        print(
            f'{colored(colour.capitalize(), text_colour)} ({len(cs)} countries):', end=delimit)
        print(delimit.join(cs))
        print()


def fetch_or_read():
    with open('go2uk.db', 'a+') as db:
        db.seek(0)
        lines = db.readlines()
        now = datetime.datetime.now()
        data = db.read()
        recent = None if len(lines) == 0 else datetime.datetime.strptime(
            lines[0].strip(), '%Y-%m-%d %H:%M:%S.%f')
        if not recent or now.day > recent.day or now.hour - recent.hour > 5:
            print(f'(wrote fresh entry at {str(now)})')
            populate()
            write_entry(data, now)
        else:
            print(f'(retrieved data from log at {str(recent)})')
            for line in lines[1:4]:
                parts = line.split(':')
                col = parts[0].strip()
                cs = parts[1].split('/')
                cmap[col] = []
                for country in cs:
                    cmap[col].append(country)
                    country_key = country.split('(')[0].strip().lower()
                    cmap[country_key] = col


def write_entry(data, timestamp):
    with open('go2uk.db', 'a+') as db:
        db.seek(0)
        entry = f'{str(timestamp)}'
        for key in cmap:
            if key in colours:
                entry += f'\n{key}:{"/".join(cmap[key])}'
        db.write(entry + data)


fetch_or_read()
if len(sys.argv) > 1:
    arg = sys.argv[1].strip().lower()
    if arg in colours:
        show_colour(arg)
    elif arg in cmap:
        colour = cmap[arg]
        print(
            f'{arg.capitalize()}: {colored(colour, "yellow" if colour == "amber" else colour)}')
    else:
        print(f'Couldn\'t find country {colored(arg.capitalize(), "blue")}')
else:
    show_colour(*colours)
